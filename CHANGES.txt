2.14.0: (May 12, 2022)
- Added support for multiple clients: Factories can now create multiple clients with different keys while reusing the common tasks, data and behavior. Read more in our iOS SDK docs.

2.13.2: (Mar 28, 2022)
- Removed xcframework target temporarily in SPM to avoid building issues on some projects setup.

2.13.1: (Feb 25, 2022)
- Fixed issue when reconnecting when host app became active
- Fixed and optimized component creation when streaming is disabled

2.13.0: (Jan 24, 2022)
- Updated SDK telemetry storage, metrics and updater to be more effective and send less often.

2.12.1: (Dic 2, 2021)
- Fixed atrributes config issue by making "persistentAttributesEnabled" option publicly accessible.

2.12.0: (Nov 18, 2021)
- Added Attribute binding feature to allow to optionally keep user attributes loaded within the SDK, along with the user ID, for easier usage when requesting flag.

2.11.6: (Oct 22, 2021)
- Fixed memory issue on streaming delay
- Added support for a user key containing a slash character

2.11.5: (Oct 4, 2021)
- Updated streaming logic to implement the newest versions of our Streaming services, including:
    - Integration with the V2 of the Auth service, connecting to the new channels and applying the received connection delay.
    - Implemented handling of thew notification types for MySegmentsV2 (keyList, bounded and unbounded) 
    - New control notification for environment scoped streaming reset.
- Improved initialization performance by removing hashing in initial database name generation.

2.11.4: (Ago 4, 2021)
- Fixed issue occurring sometimes when SDK Update is fired

2.11.3: (Jul 9, 2021)
- Added impressions dedupe logic to avoid sending duplicated impressions, having `OPTIMIZED` and `DEBUG` modes to establish how impressions are going to be sent to Split servers.

2.11.2: (Jun 25, 2021)
- Fixed threading issue related to CoreData
- Fixed issue when loading large localhost yaml files

2.11.1: (May 13, 2021)
- Improved event management logic to decrease "Ready From Cache" event triggering time
- Added telemetry headers to SSE connection

2.11.0: (Apr 27, 2021)
- Added the ability to synchronize data when the host application is closed or in background
- Fixed small issue with jwt and streaming disabled
- Updated my segments fetch to avoid cache when update push notification is received

2.10.0: (Apr 9, 2021)
- Added SDK Updated event to notify when Splits or My Segments change

2.9.1: (Mar 10, 2021)
- Fixed performance issue when pushing data to local storage and flushing data

2.9.0: (Feb 26, 2021)
- Updated cache mechanism to use code data store instead of plain json files
- Fixed some threading race conditions in http and backoff count components

2.8.0: (Dec 22, 2020)
- Added support for Swift Packager Manager. Thanks @bsarrazin!

2.7.0: (Nov 02, 2020)
- Added support for the new Split streaming architecture. When enabled (default), the SDK will not poll for updates but instead receive notifications every time there's a change in your environments, allowing to process those much quicker. If disabled or in the event of an issue, the SDK will fallback to the known polling mechanism to provide a seamless experience.

2.6.0: (Ago 11, 2020)
- Added `syncConfig.addFilter()` method to SDK configuration to pass a list of filters for the splits that will be downloaded. Read more in our docs.

2.5.3: (Jun 30, 2020)
- Fixed issue duplicating sent impressions
- Fixed issue when rounding float values in json encoding/decoding

2.5.2: (Jan 24, 2020)
- Fixed some memory issues

2.5.1: (Dic 10, 2019)
- Added static version property in Factory
- Updated project settings suggested for xcode 11.2.1

2.5.0: (Oct 30, 2019)
- Added client destroy method for shutdown of the SDK.
- Updated integration tests suites.
- Updated client and factory initialization logic to start synchronizing as soon as factory is created.

2.4.0: (Aug 29, 2019)
- Added flush feature
- Added basic end to end tests setup
- Added swift linter
- Bugfixing - small issue with traffic types validation warning

2.3.0: (Jun 07, 2019)
 - Added split existence validation
 - Added traffic type validation
 - Added multiple factory instance validation
 - Added support for Swift 5.0

2.2.0: (May 17, 2019)
 - Added properties field to Track Event feature

2.1.0: (Apr 25, 2019)
 - Added Dynamic configurations feature

2.0.3: (Apr 12, 2019)
 - Bugfixing - Traffic allocation issue on certain scenarios

2.0.2: (Mar 13, 2019)
 - Added localhost mode
 - Updated file storage to use different data folders for each api key factory instance

2.0.1: (Feb 01, 2019)
 - Added some pending validations missed in 2.0.0
 - Improved key handling in Split Client

2.0.0: (Feb 01, 2019)
 - Added Factory Builder to instanciate Split Factory.
 - Removed previous Factory constructor
 - Renamed protocol SplitClientProtocol to SplitClient
 - Renamed protocol SplitFactoryProtocol to SplitFactory
 - Renamed protocol SplitManagerProtocol to SplitManager
 - Renamed old class SplitClient to DefaultSplitClient
 - Renamed old class SplitFactory to DefaultSplitFactory
 - Renamed old class SplitManager to DefaultSplitManager
 - Replaced methods from DefaultSplitManager class (Previously named SplitManager) by read only properties
 - Removed deprecated methods to set values from SplitClientConfig
 - Added validations for user input

1.6.1: (Feb 7, 2019)
 - Bugfixing - issue when casting from Int32 to Int on iPhone 5

1.6.0: (Jan 11, 2019)
 - Added Objective C support
 - Bugfixing - issue about Traffic Allocation = 1

1.5.6: (Dic 10, 2018)
 - Updated file storage to cache data on disk only when app goes to background

1.5.5: (Nov 29, 2018)
 - Bugfixing - retrieving null split algorithm from server

1.5.4: (Nov 16, 2018)
 - Bugfixing - Any to Int64 convertion issue
 - Bugfixing - issue in legacy algorithm

1.5.2: (Oct 11, 2018)
 - Added internal split metrics
 - Updated project structure tree

1.5.1: (Oct 3, 2018)
 - Migrated to Swift 4.2

1.5.0: (Sep 24, 2018)
 - Added Split Manager feature

1.4.0: (Sep 13, 2018)
 - Added get treatments feature

1.3.1: (Sep 12, 2018)
 - Bugfixing - issue when loading empty my segments Cache
 - Updated Deployment Target to 9.0

1.3.0: (Aug 24, 2018)
 - Updated API methods and properties to make it more Swift style
 - Removed CocoaPods dependency
 - Improved unit tests

1.2.9: (Aug 13, 2018)
 - Added impression listener

1.2.8: (Aug 3, 2018)
 - Updated Cache with performance improvements
 - Bugfixing - concurrency fixes for Cache Loading

1.2.0: (Jul 11, 2018)
 - Added new method to handle SDK events through a closure

1.1.0: (Jul 03, 2018)
 - Added Carthage support

1.0.0: (Jun 29, 2018)
 - Added track feature

0.3.0: (Jun 27, 2018)
 - Removed Alamofire and SwiftyJSON dependencies

0.2.1rc1: (May 24, 2018)
 - Added client dependency to event background task

0.2.0: (Apr 25, 2018)
 - Added events listener. Available events: SplitEvent.sdkReady and SplitEvent.sdkReadyTimedOut

0.1.5: (Mar 19, 2018)
 - Added first load from cache
